{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["getUser","userId","BASE_URL_USERS","fetch","then","res","ok","Error","status","statusText","json","TodoList","state","todos","title","getStatus","changeTodoStatus","id","copy","map","todo","completed","setState","filterTitle","toLocaleLowerCase","includes","toLowerCase","handleChange","event","target","name","value","a","this","visibleTodos","filter","className","placeholder","type","onChange","classNames","htmlFor","checked","onClick","props","selectUser","React","Component","CurrentUser","user","hasLoadError","prevProps","loadUser","clearUser","email","phone","App","selectedUserId","clearUserInfo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.445c7cb1.chunk.js","sourcesContent":["const BASE_URL_TODOS = 'https://mate.academy/students-api/todos';\n\nexport function request(): Promise<Todo[]> {\n  return fetch(BASE_URL_TODOS)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} - ${res.statusText}`);\n      }\n\n      return res.json();\n    });\n}\n\nexport const getUser = (userId: number): Promise<User> => {\n  const BASE_URL_USERS = `https://mate.academy/students-api/users/${userId}`;\n\n  return fetch(BASE_URL_USERS)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} - ${res.statusText}`);\n      }\n\n      return res.json();\n    });\n};\n","import React from 'react';\nimport './TodoList.scss';\n\nimport 'bulma/css/bulma.css';\n\nimport classNames from 'classnames';\nimport { request } from '../../api';\n\ntype Props = {\n  selectUser: (userId: number) => void,\n  userId: number,\n};\n\ntype State = {\n  todos: Todo[],\n  title: string,\n  status: string,\n};\n\nexport class TodoList extends React.Component<Props, State> {\n  state: State = {\n    todos: [],\n    title: '',\n    status: 'all',\n  };\n\n  async componentDidMount() {\n    const todos = await request();\n\n    this.setState({ todos });\n  }\n\n  getStatus = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return true;\n      case 'active':\n        return false;\n      default:\n        return 'all';\n    }\n  };\n\n  changeTodoStatus = (id: number) => {\n    const { todos } = this.state;\n\n    const copy = [...todos].map(todo => {\n      if (todo.id === id) {\n        return { ...todo, completed: !todo.completed };\n      }\n\n      return todo;\n    });\n\n    this.setState(() => ({\n      todos: copy,\n    }));\n  };\n\n  filterTitle = (todo: Todo) => {\n    const { status, title } = this.state;\n\n    if (this.getStatus(status) === 'all') {\n      return (todo.title.toLocaleLowerCase().includes(title.toLocaleLowerCase()));\n    }\n\n    return (todo.title.toLocaleLowerCase().includes(title.toLowerCase())\n      && todo.completed === this.getStatus(status));\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>\n  | React.ChangeEvent<HTMLSelectElement>) => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  render() {\n    const { todos, title, status } = this.state;\n    const visibleTodos = todos.filter(this.filterTitle);\n\n    return (\n      <div className=\"TodoList\">\n        <input\n          className=\"input is-primary\"\n          placeholder=\"Wrire a title\"\n          name=\"title\"\n          type=\"text\"\n          value={title}\n          onChange={this.handleChange}\n        />\n        <div className=\"select is-primary\">\n          <select\n            name=\"status\"\n            value={status}\n            onChange={this.handleChange}\n          >\n            <option value=\"all\">all</option>\n            <option value=\"completed\">completed</option>\n            <option value=\"active\">active</option>\n          </select>\n        </div>\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {visibleTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item', {\n                  'TodoList__item--unchecked': !todo.completed,\n                  'TodoList__item--checked': todo.completed,\n                })}\n              >\n                <label htmlFor={`${todo.id}`}>\n                  <input\n                    type=\"checkbox\"\n                    id={`${todo.id}`}\n                    checked={todo.completed}\n                    onChange={() => this.changeTodoStatus(todo.id)}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                \"\n                  type=\"button\"\n                  onClick={() => this.props.selectUser(todo.userId)}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './CurrentUser.scss';\n\nimport { getUser } from '../../api';\n\ntype Props = {\n  userId: number,\n  clearUser: () => void,\n};\n\ntype State = {\n  user: User | null,\n  hasLoadError: boolean,\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n    hasLoadError: false,\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    const { userId } = this.props;\n\n    if (prevProps.userId !== userId) {\n      this.loadUser();\n    }\n  }\n\n  async loadUser() {\n    const { userId } = this.props;\n\n    try {\n      const user = await getUser(userId);\n\n      this.setState({\n        user,\n        hasLoadError: false,\n      });\n    } catch (error) {\n      this.setState({ hasLoadError: true });\n    }\n  }\n\n  render() {\n    const { user, hasLoadError } = this.state;\n    const { clearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        {hasLoadError\n          ? <div>User not found</div>\n          : (\n            <div>\n              <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${user?.id}`}</span></h2>\n\n              <h3 className=\"CurrentUser__name\">{user?.name}</h3>\n              <p className=\"CurrentUser__email\">{user?.email}</p>\n              <p className=\"CurrentUser__phone\">{user?.phone}</p>\n\n              <button\n                type=\"button\"\n                className=\"TodoList__user-button\n                TodoList__user-button--selected\n                button\"\n                onClick={() => clearUser()}\n              >\n                Clear\n              </button>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\ntype State = {\n  selectedUserId: number;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n  };\n\n  selectUser = (userId: number) => {\n    this.setState({ selectedUserId: userId });\n  };\n\n  clearUserInfo = () => {\n    this.setState({ selectedUserId: 0 });\n  };\n\n  render() {\n    const { selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n\n          <TodoList\n            userId={this.state.selectedUserId}\n            selectUser={this.selectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={this.state.selectedUserId}\n                clearUser={this.clearUserInfo}\n              />\n            ) : (\n              <div className=\"content is-large has-text-centered has-text-weight-bold\">\n                No user selected\n              </div>\n            )}\n          </div>\n        </div>\n        )\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bulma/css/bulma.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}